name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (v23.1.0)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.11.0

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Step 4: Build the project
      - name: Build the project
        run: npm run build

      # Step 5: Upload Build Artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci # Ensures CD only runs if CI is successful
    if: github.ref == 'refs/heads/main' # Only run CD on the master branch

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download Build Artifact
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      # Step 3: Deploy to S3
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-1  # Explicitly set to Mumbai region

      # Step 4: Invalidate CloudFront Cache
      - name: Invalidate CloudFront Cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/*'
          AWS_REGION: ap-northeast-1 # Set AWS region explicitly
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}